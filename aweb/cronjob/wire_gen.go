// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/pluckhuang/goweb/aweb/cronjob/ioc"
	"github.com/pluckhuang/goweb/aweb/cronjob/repository"
	"github.com/pluckhuang/goweb/aweb/cronjob/service"
)

// Injectors from wire.go:

func Init() *App {
	engine := ioc.InitWebServer()
	loggerV1 := ioc.InitLogger()
	cmdable := ioc.InitRedis()
	client := ioc.InitRlockClient(cmdable)
	clientv3Client := ioc.InitEtcd()
	interactiveServiceClient := ioc.InitInteractiveClient(clientv3Client)
	articleServiceClient := ioc.InitArticleClient(clientv3Client)
	rankingRedisCache := ioc.InitRankingRedisCache(cmdable)
	rankingLocalCache := ioc.InitRankingLocalCache()
	rankingRepository := repository.NewCachedRankingRepository(rankingRedisCache, rankingLocalCache)
	rankingService := service.NewBatchRankingService(interactiveServiceClient, articleServiceClient, rankingRepository)
	rankingJob := ioc.InitRankingJob(loggerV1, client, rankingService)
	cron := ioc.InitCronJob(loggerV1, rankingJob)
	app := &App{
		server: engine,
		cron:   cron,
	}
	return app
}
